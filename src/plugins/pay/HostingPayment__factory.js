/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { utils, Contract, ContractFactory } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract IRootChannel",
        name: "_channel",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes2",
        name: "gId_",
        type: "bytes2",
      },
      {
        indexed: true,
        internalType: "bytes2",
        name: "serviceId_",
        type: "bytes2",
      },
      {
        indexed: true,
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "realCost",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bandwidth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "storageAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buildingTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerMonth",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct HostingCombos.Combo",
            name: "combo",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct HostingExpiration.Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes2",
        name: "gId_",
        type: "bytes2",
      },
      {
        indexed: true,
        internalType: "bytes2",
        name: "serviceId_",
        type: "bytes2",
      },
      {
        indexed: true,
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "realCost",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bandwidth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "storageAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buildingTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerMonth",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct HostingCombos.Combo",
            name: "combo",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct HostingExpiration.Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    name: "Renew",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes2",
        name: "gId_",
        type: "bytes2",
      },
      {
        indexed: true,
        internalType: "bytes2",
        name: "serviceId_",
        type: "bytes2",
      },
      {
        indexed: true,
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "realCost",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bandwidth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "storageAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buildingTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerMonth",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
            ],
            internalType: "struct HostingCombos.Combo",
            name: "combo",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct HostingExpiration.Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    name: "Upgrade",
    type: "event",
  },
  {
    inputs: [],
    name: "MaxTotalExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MinExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "bandwidth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "storageAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buildingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerMonth",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct HostingCombos.Combo",
        name: "combo",
        type: "tuple",
      },
    ],
    name: "addCombo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration_",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "canBuy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "canRenew",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "canUpgrade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "channel",
    outputs: [
      {
        internalType: "contract IRootChannel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comboLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "combos",
    outputs: [
      {
        internalType: "uint256",
        name: "bandwidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "storageAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buildingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerMonth",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "expiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "expirationAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gId",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration_",
        type: "uint256",
      },
    ],
    name: "getComboCost",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "getUpgradeExchange",
    outputs: [
      {
        internalType: "uint256",
        name: "expiration_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "guid",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "isExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "maxTotalRenewExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "maxTotalUpgradeExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintStorage",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "",
        type: "bytes28",
      },
    ],
    name: "receipts",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boughtTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "realCost",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bandwidth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "storageAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buildingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerMonth",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct HostingCombos.Combo",
        name: "combo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration_",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceId",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiration_",
        type: "uint256",
      },
    ],
    name: "setMaxTotalExpriation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiration_",
        type: "uint256",
      },
    ],
    name: "setMinExpriation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRootChannel",
        name: "_channel",
        type: "address",
      },
    ],
    name: "transferRootChannel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "bandwidth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "storageAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buildingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerMonth",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct HostingCombos.Combo",
        name: "combo",
        type: "tuple",
      },
    ],
    name: "updateCombo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moreExpiration",
        type: "uint256",
      },
    ],
    name: "upgrade",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "validateCombo",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526001805461ffff60b01b1961ffff60a01b19909116600160a01b1716600160b01b17905562278d006004556301e13380600555600780546499695f6b0064ffffffffff199091161790553480156200005b57600080fd5b506040516200392c3803806200392c8339810160408190526200007e916200052f565b80620000936200008d620003a0565b620003a4565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000be82620003f4565b6040805160c081018252644b000000008152640a00000000602080830191825261753083850190815268022b1c8c1227a00000606085019081526001608086018181528751808901909852600388526250726f60e81b8886015260a0870197885260028054928301815560005286516000805160206200386c833981519152600690930292830190815595516000805160206200388c8339815191528301559251600080516020620038ac8339815191528201559051600080516020620038cc8339815191528201559051600080516020620038ec8339815191528201805460ff191691151591909117905593518051601e95620001d2936000805160206200390c83398151915290910192019062000489565b50506040805160c0810182526103e8841b81526064841b60208083019182526201d4c0838501908152680ac9ae05a71ebc00006060850190815260016080860181815287518089019098526008885267427573696e65737360c01b8886015260a08701978852600280549283018155600052865160069092026000805160206200386c833981519152810192835595516000805160206200388c8339815191528701559251600080516020620038ac8339815191528601559051600080516020620038cc8339815191528501559051600080516020620038ec8339815191528401805491151560ff1990921691909117905593518051939550620002ed936000805160206200390c8339815191529093019291019062000489565b5050600680546001818101835560008390527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f91820180546001600160a01b031990811673998d6e0efc50a349bce64cc8d62d17dc2b34cfbf179091558354808301855583018054821673d1c2f175e03abe8666a5f7054be2f7b305026c1217905583549182019093550180549091167320d3889d5fd378394452d0f3294dbb6f79822a2c179055506200063b92505050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620003fe620003a0565b6001600160a01b0316620004116200047a565b6001600160a01b031614620004435760405162461bcd60e51b81526004016200043a90620005b3565b60405180910390fd5b6001600160a01b0381166200046c5760405162461bcd60e51b81526004016200043a906200056d565b6200047781620003a4565b50565b6000546001600160a01b031690565b8280546200049790620005e8565b90600052602060002090601f016020900481019282620004bb576000855562000506565b82601f10620004d657805160ff191683800117855562000506565b8280016001018555821562000506579182015b8281111562000506578251825591602001919060010190620004e9565b506200051492915062000518565b5090565b5b8082111562000514576000815560010162000519565b6000806040838503121562000542578182fd5b82516200054f8162000625565b6020840151909250620005628162000625565b809150509250929050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600281046001821680620005fd57607f821691505b602082108114156200061f57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146200047757600080fd5b613221806200064b6000396000f3fe6080604052600436106102345760003560e01c80638da5cb5b1161012e578063d6fa8abc116100ab578063e5e24d491161006f578063e5e24d49146106a2578063ee2bd168146106c2578063f2fde38b146106e2578063f576b70014610702578063f83d08ba146107175761025a565b8063d6fa8abc14610618578063d9caed1214610638578063da20ec6a14610658578063de66341e1461066d578063e3656f29146106825761025a565b8063a4d02085116100f2578063a4d0208514610571578063a69df4b514610591578063aefa7c9b146105a6578063ca60fb3b146105d8578063d48bfca7146105f85761025a565b80638da5cb5b146104e55780638fb16a3b146104fa5780638fc24ef11461051a578063a1adf8331461053a578063a2a19e451461054f5761025a565b806353065b17116101bc578063715018a611610180578063715018a61461046457806372ee5066146104795780637b10f06d146104995780637bbdb96e146104ae5780638b325672146104c35761025a565b806353065b17146103c457806356230c95146103e45780636595ad4a1461040457806369312570146104245780636e507c6e146104445761025a565b80633041ebbc116102035780633041ebbc1461030257806336c5d72414610335578063417b43c314610357578063461b442c146103775780634f64b2be146103975761025a565b8063135f03c91461025f57806319969a99146102955780631bdb9c64146102c25780631d608a59146102e25761025a565b3661025a5760405162461bcd60e51b815260040161025190612c4b565b60405180910390fd5b600080fd5b34801561026b57600080fd5b5061027f61027a366004612856565b61072c565b60405161028c9190612b03565b60405180910390f35b3480156102a157600080fd5b506102b56102b036600461283c565b6107a5565b60405161028c9190612b5c565b3480156102ce57600080fd5b506102b56102dd366004612856565b6107d8565b3480156102ee57600080fd5b5061027f6102fd36600461283c565b610814565b34801561030e57600080fd5b5061032261031d36600461283c565b610895565b60405161028c9796959493929190612a73565b34801561034157600080fd5b5061035561035036600461295c565b6109b6565b005b34801561036357600080fd5b506102b5610372366004612856565b610a32565b34801561038357600080fd5b506102b56103923660046129b9565b610adc565b3480156103a357600080fd5b506103b76103b236600461295c565b610b33565b60405161028c9190612a22565b3480156103d057600080fd5b506103556103df36600461295c565b610b5d565b3480156103f057600080fd5b506102b56103ff36600461283c565b610ba1565b34801561041057600080fd5b506102b561041f3660046128b1565b610bdb565b34801561043057600080fd5b506102b561043f36600461283c565b610f69565b34801561045057600080fd5b5061035561045f366004612974565b610fd8565b34801561047057600080fd5b506103556110c8565b34801561048557600080fd5b506102b56104943660046128b1565b611113565b3480156104a557600080fd5b506102b56114c2565b3480156104ba57600080fd5b506103b76114c8565b3480156104cf57600080fd5b506104d86114d7565b60405161028c9190612b65565b3480156104f157600080fd5b506103b76114e5565b34801561050657600080fd5b5061035561051536600461295c565b6114f4565b34801561052657600080fd5b50610355610535366004612929565b61156c565b34801561054657600080fd5b506102b56116db565b34801561055b57600080fd5b506105646116e1565b60405161028c9190612b0e565b34801561057d57600080fd5b5061027f61058c36600461283c565b6116f1565b34801561059d57600080fd5b50610355611725565b3480156105b257600080fd5b506105c66105c136600461295c565b611770565b60405161028c9695949392919061307c565b3480156105e457600080fd5b5061027f6105f3366004612856565b611848565b34801561060457600080fd5b50610355610613366004612804565b611977565b34801561062457600080fd5b50610355610633366004612804565b611a08565b34801561064457600080fd5b506103556106533660046128e9565b611a69565b34801561066457600080fd5b50610564611ac1565b34801561067957600080fd5b506102b5611ad1565b34801561068e57600080fd5b506102b561069d36600461287f565b611ad7565b3480156106ae57600080fd5b506102b56106bd36600461283c565b6120cd565b3480156106ce57600080fd5b506103556106dd36600461295c565b612126565b3480156106ee57600080fd5b506103556106fd366004612804565b61216a565b34801561070e57600080fd5b506102b56121d8565b34801561072357600080fd5b506103556121de565b60006002828154811061074f57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166107725750600061079f565b63ffffffff198316600090815260036020526040902060020154158061079c575061079c836116f1565b90505b92915050565b63ffffffff19811660009081526003602081905260408220908101546002909101546107d09161222c565b90505b919050565b60006107e48383611848565b6107f05750600061079f565b60006107fc8484610a32565b60055490915061080c9082612238565b949350505050565b63ffffffff198116600090815260036020526040812060010154600280548290811061085057634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166108755760009150506107d3565b505063ffffffff1916600090815260036020526040902060020154151590565b6003602081815260009283526040928390208054600182015460028301549483015460048401546005850154885160c081018a526006870180548252600788015498820198909852600887015499810199909952600986015460608a0152600a86015460ff16151560808a0152600b860180546001600160a01b039096169994989793969295919492939160a08401919061092f90613161565b80601f016020809104026020016040519081016040528092919081815260200182805461095b90613161565b80156109a85780601f1061097d576101008083540402835291602001916109a8565b820191906000526020600020905b81548152906001019060200180831161098b57829003601f168201915b505050505081525050905087565b6109be612244565b6001600160a01b03166109cf6114e5565b6001600160a01b0316146109f55760405162461bcd60e51b815260040161025190612d87565b60068181548110610a1657634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b031916905550565b600080610a3e84610ba1565b63ffffffff19851660009081526003602081905260408220908101546004909101549293509091610a7a9190610a749085612248565b90612254565b90506000610ac662278d0060028781548110610aa657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015461225490919063ffffffff16565b9050610ad28282612254565b9695505050505050565b6000610ae7836114f4565b61079c62278d00610a748460028781548110610b1357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016003015461224890919063ffffffff16565b60068181548110610b4357600080fd5b6000918252602090912001546001600160a01b0316905081565b610b65612244565b6001600160a01b0316610b766114e5565b6001600160a01b031614610b9c5760405162461bcd60e51b815260040161025190612d87565b600455565b600080610bad836107a5565b905042811015610bc15760009150506107d3565b610bd442610bce856107a5565b90612238565b9392505050565b60065460009084908110610c015760405162461bcd60e51b815260040161025190612e6e565b82600454811015610c245760405162461bcd60e51b815260040161025190612df3565b8685610c30828261072c565b610c4c5760405162461bcd60e51b815260040161025190612c8e565b60075460ff1615610c6f5760405162461bcd60e51b815260040161025190612ccf565b610c78876114f4565b610c828787610adc565b9450610cc833308760068c81548110610cab57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316929190612260565b6040518060e00160405280336001600160a01b0316815260200188815260200142815260200187815260200186815260200186815260200160028981548110610d2157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054610d8d90613161565b80601f0160208091040260200160405190810160405280929190818152602001828054610db990613161565b8015610e065780601f10610ddb57610100808354040283529160200191610e06565b820191906000526020600020905b815481529060010190602001808311610de957829003601f168201915b50505091909252505050905263ffffffff198a16600090815260036020818152604092839020845181546001600160a01b0319166001600160a01b0390911617815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a080870151600584015560c087015180516006850190815581860151600786015596810151600885015594850151600984015590840151600a8301805460ff19169115159190911790558301518051919492610ed792600b8701929091019061262d565b505050905050610ee6896122b8565b60015463ffffffff198a1660008181526003602052604090819020905191926001600160f01b0319600160b01b820460f090811b821694600160a01b909304901b16917faa3c862baa4547b794a70047f865c20ff964ce79c40a7e25f16464eaa0ed30ce91610f559190612f42565b60405180910390a450505050949350505050565b6000610f7482610814565b610f80575060006107d3565b610f89826116f1565b15610f9757506005546107d3565b63ffffffff1982166000908152600360208190526040822090810154600290910154610fc8914291610bce9161222c565b600554909150610bd49082612238565b610fe0612244565b6001600160a01b0316610ff16114e5565b6001600160a01b0316146110175760405162461bcd60e51b815260040161025190612d87565b60025482106110385760405162461bcd60e51b815260040161025190612dbc565b806002838154811061105a57634e487b7160e01b600052603260045260246000fd5b60009182526020918290208351600692909202019081558282015160018201556040830151600282015560608301516003820155608083015160048201805460ff191691151591909117905560a0830151805191926110c19260058501929091019061262d565b5050505050565b6110d0612244565b6001600160a01b03166110e16114e5565b6001600160a01b0316146111075760405162461bcd60e51b815260040161025190612d87565b61111160006123e9565b565b600654600090849081106111395760405162461bcd60e51b815260040161025190612e6e565b85846111458282611848565b6111615760405162461bcd60e51b815260040161025190612b8d565b60075460ff16156111845760405162461bcd60e51b815260040161025190612ccf565b61118d866114f4565b60006111998988610a32565b905060006111a78883610adc565b60009650905086156111fe576111bd8888610adc565b95506111c9818761222c565b90506111d5828861222c565b91506111fe33308860068d81548110610cab57634e487b7160e01b600052603260045260246000fd5b6004548210156112205760405162461bcd60e51b815260040161025190612df3565b6040518060e00160405280336001600160a01b0316815260200189815260200142815260200183815260200182815260200187815260200160028a8154811061127957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581526020016005820180546112e590613161565b80601f016020809104026020016040519081016040528092919081815260200182805461131190613161565b801561135e5780601f106113335761010080835404028352916020019161135e565b820191906000526020600020905b81548152906001019060200180831161134157829003601f168201915b50505091909252505050905263ffffffff198b16600090815260036020818152604092839020845181546001600160a01b0319166001600160a01b0390911617815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a080870151600584015560c087015180516006850190815581860151600786015596810151600885015594850151600984015590840151600a8301805460ff1916911515919091179055830151805191949261142f92600b8701929091019061262d565b50505090505061143e8a6122b8565b60015463ffffffff198b1660008181526003602052604090819020905191926001600160f01b0319600160b01b820460f090811b821694600160a01b909304901b16917f60c9e9ceb7f92d1e96796201b7c00e6104acefe6425a60e1f7ff71b8cb4ada37916114ad9190612f42565b60405180910390a45050505050949350505050565b60055481565b6001546001600160a01b031681565b600754610100900460e01b81565b6000546001600160a01b031690565b60025481106115155760405162461bcd60e51b815260040161025190612eff565b6002818154811061153657634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166115695760405162461bcd60e51b815260040161025190612d06565b50565b611574612244565b6001600160a01b03166115856114e5565b6001600160a01b0316146115ab5760405162461bcd60e51b815260040161025190612d87565b6002805460018101825560009190915281517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace60069092029182019081556020808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf84015560408401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad084015560608401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad184015560808401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad28401805460ff191691151591909117905560a0840151805185946116d5937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad390910192019061262d565b50505050565b60045481565b600154600160a01b900460f01b81565b63ffffffff198116600090815260036020819052604082209081015460029091015461171c9161222c565b42101592915050565b61172d612244565b6001600160a01b031661173e6114e5565b6001600160a01b0316146117645760405162461bcd60e51b815260040161025190612d87565b6007805460ff19169055565b6002818154811061178057600080fd5b600091825260209091206006909102018054600182015460028301546003840154600485015460058601805495975093959294919360ff90911692916117c590613161565b80601f01602080910402602001604051908101604052809291908181526020018280546117f190613161565b801561183e5780601f106118135761010080835404028352916020019161183e565b820191906000526020600020905b81548152906001019060200180831161182157829003601f168201915b5050505050905086565b63ffffffff198216600090815260036020526040812060010154600280548290811061188457634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166118a957600091505061079f565b600283815481106118ca57634e487b7160e01b600052603260045260246000fd5b600091825260209091206004600690920201015460ff166118ef57600091505061079f565b6118f8846116f1565b1561190757600091505061079f565b6002818154811061192857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301546002848154811061195b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201600301541191505092915050565b61197f612244565b6001600160a01b03166119906114e5565b6001600160a01b0316146119b65760405162461bcd60e51b815260040161025190612d87565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0392909216919091179055565b611a10612244565b6001600160a01b0316611a216114e5565b6001600160a01b031614611a475760405162461bcd60e51b815260040161025190612d87565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b611a71612244565b6001600160a01b0316611a826114e5565b6001600160a01b031614611aa85760405162461bcd60e51b815260040161025190612d87565b611abc6001600160a01b0384168383612439565b505050565b600154600160b01b900460f01b81565b60065490565b60065460009083908110611afd5760405162461bcd60e51b815260040161025190612e6e565b82600454811015611b205760405162461bcd60e51b815260040161025190612df3565b85611b2a81610814565b611b465760405162461bcd60e51b815260040161025190612c0a565b60075460ff1615611b695760405162461bcd60e51b815260040161025190612ccf565b63ffffffff198716600090815260036020526040902060010154611b8c816114f4565b611b968187610adc565b9450611bbf33308760068b81548110610cab57634e487b7160e01b600052603260045260246000fd5b611bc8886116f1565b15611de7576040518060e00160405280336001600160a01b0316815260200182815260200142815260200187815260200186815260200186815260200160028381548110611c2657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054611c9290613161565b80601f0160208091040260200160405190810160405280929190818152602001828054611cbe90613161565b8015611d0b5780601f10611ce057610100808354040283529160200191611d0b565b820191906000526020600020905b815481529060010190602001808311611cee57829003601f168201915b50505091909252505050905263ffffffff198916600090815260036020818152604092839020845181546001600160a01b0319166001600160a01b0390911617815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a080870151600584015560c087015180516006850190815581860151600786015596810151600885015594850151600984015590840151600a8301805460ff19169115159190911790558301518051919492611ddc92600b8701929091019061262d565b505050905050612042565b63ffffffff1988166000908152600360208190526040822090810154600290910154611e18914291610bce9161222c565b90506040518060e00160405280336001600160a01b03168152602001838152602001428152602001611e53838a61222c90919063ffffffff16565b815260200187815260200187815260200160028481548110611e8557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152602001600582018054611ef190613161565b80601f0160208091040260200160405190810160405280929190818152602001828054611f1d90613161565b8015611f6a5780601f10611f3f57610100808354040283529160200191611f6a565b820191906000526020600020905b815481529060010190602001808311611f4d57829003601f168201915b50505091909252505050905263ffffffff198a16600090815260036020818152604092839020845181546001600160a01b0319166001600160a01b0390911617815584820151600182015584840151600282015560608086015193820193909355608080860151600483015560a080870151600584015560c087015180516006850190815581860151600786015596810151600885015594850151600984015590840151600a8301805460ff1916911515919091179055830151805191949261203b92600b8701929091019061262d565b5050505050505b61204b886122b8565b60015463ffffffff19891660008181526003602052604090819020905191926001600160f01b0319600160b01b820460f090811b821694600160a01b909304901b16917f74bde525ad0d6a38fb6415390d288245aa70c9713b9ab3748e6b070a7c3e4d1e916120ba9190612f42565b60405180910390a4505050509392505050565b60015460009081906120f4908290600160a01b900460f01b6001600160f01b03191661222c565b600154909150612116908290600160b01b900460e01b61ffff60e01b1661222c565b9050610bd481602085901c61222c565b61212e612244565b6001600160a01b031661213f6114e5565b6001600160a01b0316146121655760405162461bcd60e51b815260040161025190612d87565b600555565b612172612244565b6001600160a01b03166121836114e5565b6001600160a01b0316146121a95760405162461bcd60e51b815260040161025190612d87565b6001600160a01b0381166121cf5760405162461bcd60e51b815260040161025190612bc4565b611569816123e9565b60025490565b6121e6612244565b6001600160a01b03166121f76114e5565b6001600160a01b03161461221d5760405162461bcd60e51b815260040161025190612d87565b6007805460ff19166001179055565b600061079c82846130c7565b600061079c828461311e565b3390565b600061079c82846130ff565b600061079c82846130df565b6116d5846323b872dd60e01b85858560405160240161228193929190612a36565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612458565b60055463ffffffff19821660009081526003602081905260409091200154829110156122f65760405162461bcd60e51b815260040161025190612d3d565b6007546001805463ffffffff198516600090815260036020526040902090910154600280546123e594610100900460e01b93600160a01b810460f090811b94600160b01b909204901b928892909190811061236157634e487b7160e01b600052603260045260246000fd5b600091825260208083206001600690930201919091015463ffffffff198a1683526003918290526040909220015461239a90429061222c565b6040516024016123ae959493929190612b23565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526124e7565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611abc8363a9059cbb60e01b8484604051602401612281929190612a5a565b60006124ad826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125459092919063ffffffff16565b805190915015611abc57808060200190518101906124cb9190612820565b611abc5760405162461bcd60e51b815260040161025190612eb5565b6001546040516309813cdd60e31b81526001600160a01b0390911690634c09e6e890612517908490600401612b7a565b600060405180830381600087803b15801561253157600080fd5b505af11580156110c1573d6000803e3d6000fd5b606061080c848460008585612559856125ee565b6125755760405162461bcd60e51b815260040161025190612e37565b600080866001600160a01b031685876040516125919190612a06565b60006040518083038185875af1925050503d80600081146125ce576040519150601f19603f3d011682016040523d82523d6000602084013e6125d3565b606091505b50915091506125e38282866125f4565b979650505050505050565b3b151590565b60608315612603575081610bd4565b8251156126135782518084602001fd5b8160405162461bcd60e51b81526004016102519190612b7a565b82805461263990613161565b90600052602060002090601f01602090048101928261265b57600085556126a1565b82601f1061267457805160ff19168380011785556126a1565b828001600101855582156126a1579182015b828111156126a1578251825591602001919060010190612686565b506126ad9291506126b1565b5090565b5b808211156126ad57600081556001016126b2565b80356107d3816131dd565b803563ffffffff19811681146107d357600080fd5b600082601f8301126126f6578081fd5b813567ffffffffffffffff80821115612711576127116131b2565b604051601f8301601f191681016020018281118282101715612735576127356131b2565b60405282815284830160200186101561274c578384fd5b82602086016020830137918201602001929092529392505050565b600060c08284031215612778578081fd5b60405160c0810167ffffffffffffffff828210818311171561279c5761279c6131b2565b81604052829350843583526020850135602084015260408501356040840152606085013560608401526127d1608086016126c6565b608084015260a08501359150808211156127ea57600080fd5b506127f7858286016126e6565b60a0830152505092915050565b600060208284031215612815578081fd5b8135610bd4816131c8565b600060208284031215612831578081fd5b8151610bd4816131dd565b60006020828403121561284d578081fd5b61079c826126d1565b60008060408385031215612868578081fd5b612871836126d1565b946020939093013593505050565b600080600060608486031215612893578081fd5b61289c846126d1565b95602085013595506040909401359392505050565b600080600080608085870312156128c6578081fd5b6128cf856126d1565b966020860135965060408601359560600135945092505050565b6000806000606084860312156128fd578283fd5b8335612908816131c8565b92506020840135612918816131c8565b929592945050506040919091013590565b60006020828403121561293a578081fd5b813567ffffffffffffffff811115612950578182fd5b61080c84828501612767565b60006020828403121561296d578081fd5b5035919050565b60008060408385031215612986578182fd5b82359150602083013567ffffffffffffffff8111156129a3578182fd5b6129af85828601612767565b9150509250929050565b600080604083850312156129cb578182fd5b50508035926020909101359150565b600081518084526129f2816020860160208601613135565b601f01601f19169290920160200192915050565b60008251612a18818460208701613135565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b03891682528760208301528660408301528560608301528460808301528360a083015260e060c0830152825160e08301526020830151610100830152604083015161012083015260608301516101408301526080830151151561016083015260a083015160c0610180840152612af56101a08401826129da565b9a9950505050505050505050565b901515815260200190565b6001600160f01b031991909116815260200190565b6001600160f01b0319958616815293909416602084015263ffffffff199190911660408301526060820152608081019190915260a00190565b90815260200190565b6001600160e01b031991909116815260200190565b60006020825261079c60208301846129da565b6020808252601f908201527f5265736f75726365436f6d626f3a2063616e206e6f7420757067726164652e00604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526021908201527f5265736f75726365436f6d626f3a2063616e6f742072656e657720636f6d626f6040820152601760f91b606082015260800190565b60208082526023908201527f5265736f75726365436f6d626f3a2063616e206e6f74207265636569766520656040820152623a341760e91b606082015260800190565b60208082526021908201527f5265736f75726365436f6d626f3a2063616e206e6f742062757920636f6d626f6040820152601760f91b606082015260800190565b6020808252601e908201527f4c6f636b61626c653a206f7065726174696f6e206973206c6f636b65642e0000604082015260600190565b6020808252601d908201527f5265736f75726365436f6d626f3a20496e76616c696420636f6d626f2e000000604082015260600190565b6020808252602a908201527f5265736f75726365436f6d626f3a20746f74616c2065787069726174696f6e206040820152693a37b7903630b933b29760b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f5265736f75726365436f6d626f3a20496e76616c6964206c6576656c2e000000604082015260600190565b60208082526024908201527f5265736f75726365436f6d626f3a2065787069726174696f6e20746f6f20736d60408201526330b6361760e11b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526027908201527f5265736f75726365436f6d626f3a20746f6b656e496e646578206f7574206f66604082015266103930b733b29760c91b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526023908201527f5265736f75726365436f6d626f3a20496e76616c696420636f6d626f206c657660408201526232b61760e91b606082015260800190565b6000602080835260018060a01b038454168184015260018085015460408501526002850154606085015260038501546080850152600485015460a0850152600585015460c085015260e080850152600685015461010085015260078501546101208501526008850154610140850152600985015461016085015260ff600a860154161515610180850152600b850160c06101a08601528381548560028204905084821680612ff157607f821691505b86821081141561300f57634e487b7160e01b88526022600452602488fd5b61301d826101c08b01612b5c565b81801561303157600181146130425761306c565b60ff1985168252888201955061306c565b61304b876130bb565b8a5b8581101561306657815484820152908901908a0161304d565b83019650505b50939a9950505050505050505050565b6000878252866020830152856040830152846060830152831515608083015260c060a08301526130af60c08301846129da565b98975050505050505050565b60009081526020902090565b600082198211156130da576130da61319c565b500190565b6000826130fa57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156131195761311961319c565b500290565b6000828210156131305761313061319c565b500390565b60005b83811015613150578181015183820152602001613138565b838111156116d55750506000910152565b60028104600182168061317557607f821691505b6020821081141561319657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461156957600080fd5b801515811461156957600080fdfea264697066735822122085df795037dc6431a3c98f14a4d808f28d05d6624dc0d10a20ce9cbfb062071664736f6c63430008000033405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3";

export class HostingPayment__factory extends ContractFactory {
  constructor(
    ...args //: [signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner,
    _channel,
    overrides //?: Overrides & { from? | Promise<string> }
  ) {
    return super.deploy(owner, _channel, overrides || {}); // as Promise<HostingPayment>;
  }
  getDeployTransaction(
    owner,
    _channel,
    overrides //?: Overrides & { from? | Promise<string> }
  ) {
    return super.getDeployTransaction(owner, _channel, overrides || {});
  }
  attach(address) {
    return super.attach(address);
  }
  connect(signer) {
    return super.connect(signer);
  }
  static bytecode = _bytecode;
  static abi = _abi;
  static createInterface() {
    return new utils.Interface(_abi);
  }
  static connect(address, signerOrProvider) {
    return new Contract(address, _abi, signerOrProvider);
  }
}
